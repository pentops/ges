// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: gestest/v1/topic/foo.p.j5s.proto

package gestest_tpb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	gestest_pb "github.com/pentops/ges/internal/gen/gestest/v1/gestest_pb"
	_ "github.com/pentops/j5/gen/j5/ext/v1/ext_j5pb"
	messaging_j5pb "github.com/pentops/j5/gen/j5/messaging/v1/messaging_j5pb"
	psm_j5pb "github.com/pentops/j5/gen/j5/state/v1/psm_j5pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FooEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *psm_j5pb.EventPublishMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Keys     *gestest_pb.FooKeys            `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
	Event    *gestest_pb.FooEventType       `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Data     *gestest_pb.FooData            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Status   gestest_pb.FooStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=gestest.v1.FooStatus" json:"status,omitempty"`
}

func (x *FooEventMessage) Reset() {
	*x = FooEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooEventMessage) ProtoMessage() {}

func (x *FooEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooEventMessage.ProtoReflect.Descriptor instead.
func (*FooEventMessage) Descriptor() ([]byte, []int) {
	return file_gestest_v1_topic_foo_p_j5s_proto_rawDescGZIP(), []int{0}
}

func (x *FooEventMessage) GetMetadata() *psm_j5pb.EventPublishMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FooEventMessage) GetKeys() *gestest_pb.FooKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *FooEventMessage) GetEvent() *gestest_pb.FooEventType {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *FooEventMessage) GetData() *gestest_pb.FooData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FooEventMessage) GetStatus() gestest_pb.FooStatus {
	if x != nil {
		return x.Status
	}
	return gestest_pb.FooStatus(0)
}

type FooSummaryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upsert *messaging_j5pb.UpsertMetadata `protobuf:"bytes,1,opt,name=upsert,proto3" json:"upsert,omitempty"`
	Name   string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FooSummaryMessage) Reset() {
	*x = FooSummaryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooSummaryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooSummaryMessage) ProtoMessage() {}

func (x *FooSummaryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooSummaryMessage.ProtoReflect.Descriptor instead.
func (*FooSummaryMessage) Descriptor() ([]byte, []int) {
	return file_gestest_v1_topic_foo_p_j5s_proto_rawDescGZIP(), []int{1}
}

func (x *FooSummaryMessage) GetUpsert() *messaging_j5pb.UpsertMetadata {
	if x != nil {
		return x.Upsert
	}
	return nil
}

func (x *FooSummaryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FooMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FooId string `protobuf:"bytes,1,opt,name=foo_id,json=fooId,proto3" json:"foo_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FooMessage) Reset() {
	*x = FooMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooMessage) ProtoMessage() {}

func (x *FooMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooMessage.ProtoReflect.Descriptor instead.
func (*FooMessage) Descriptor() ([]byte, []int) {
	return file_gestest_v1_topic_foo_p_j5s_proto_rawDescGZIP(), []int{2}
}

func (x *FooMessage) GetFooId() string {
	if x != nil {
		return x.FooId
	}
	return ""
}

func (x *FooMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_gestest_v1_topic_foo_p_j5s_proto protoreflect.FileDescriptor

var file_gestest_v1_topic_foo_p_j5s_proto_rawDesc = []byte{
	0x0a, 0x20, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x2f, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x2e, 0x6a, 0x35, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f,
	0x6f, 0x2e, 0x6a, 0x35, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6a, 0x35, 0x2f, 0x65, 0x78, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6a, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6a, 0x35, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6a, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x02, 0x0a, 0x0f, 0x46, 0x6f, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0xc2, 0xff, 0x8e, 0x02, 0x02, 0x52, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x0d, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xc2,
	0xff, 0x8e, 0x02, 0x02, 0x52, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x3d, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xc2, 0xff, 0x8e,
	0x02, 0x02, 0x62, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0d,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xc2, 0xff, 0x8e, 0x02, 0x02, 0x52, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x12, 0xba, 0x48, 0x08, 0xc8,
	0x01, 0x01, 0x82, 0x01, 0x02, 0x10, 0x01, 0xc2, 0xff, 0x8e, 0x02, 0x02, 0x5a, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x07, 0xc2, 0xff, 0x8e, 0x02, 0x02, 0x52, 0x00, 0x22,
	0x82, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x35, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xc2, 0xff,
	0x8e, 0x02, 0x02, 0x52, 0x00, 0x52, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xc2, 0xff, 0x8e,
	0x02, 0x03, 0xf2, 0x01, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x07, 0xc2, 0xff, 0x8e,
	0x02, 0x02, 0x52, 0x00, 0x22, 0x77, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x25, 0xba, 0x48, 0x18, 0xc8, 0x01, 0x01, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b,
	0x30, 0x2d, 0x39, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x32, 0x7d, 0x24, 0xc2,
	0xff, 0x8e, 0x02, 0x05, 0xb2, 0x02, 0x02, 0x08, 0x03, 0x52, 0x05, 0x66, 0x6f, 0x6f, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xc2, 0xff, 0x8e, 0x02, 0x03, 0xf2, 0x01, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x07, 0xc2, 0xff, 0x8e, 0x02, 0x02, 0x52, 0x00, 0x32, 0x7f, 0x0a,
	0x0f, 0x46, 0x6f, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x45, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e,
	0x46, 0x6f, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0xda, 0xa2, 0xf5, 0xe4, 0x02, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6f, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6a, 0x10, 0x0a, 0x0e,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x32, 0x83,
	0x01, 0x0a, 0x0f, 0x46, 0x6f, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x49, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x23, 0x2e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x46, 0x6f, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0xda,
	0xa2, 0xf5, 0xe4, 0x02, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6f, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x72, 0x10, 0x0a, 0x0e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x6f, 0x32, 0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x46,
	0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x11, 0xda, 0xa2, 0xf5, 0xe4, 0x02, 0x0b, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x67, 0x65, 0x73, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gestest_v1_topic_foo_p_j5s_proto_rawDescOnce sync.Once
	file_gestest_v1_topic_foo_p_j5s_proto_rawDescData = file_gestest_v1_topic_foo_p_j5s_proto_rawDesc
)

func file_gestest_v1_topic_foo_p_j5s_proto_rawDescGZIP() []byte {
	file_gestest_v1_topic_foo_p_j5s_proto_rawDescOnce.Do(func() {
		file_gestest_v1_topic_foo_p_j5s_proto_rawDescData = protoimpl.X.CompressGZIP(file_gestest_v1_topic_foo_p_j5s_proto_rawDescData)
	})
	return file_gestest_v1_topic_foo_p_j5s_proto_rawDescData
}

var file_gestest_v1_topic_foo_p_j5s_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gestest_v1_topic_foo_p_j5s_proto_goTypes = []any{
	(*FooEventMessage)(nil),               // 0: gestest.v1.topic.FooEventMessage
	(*FooSummaryMessage)(nil),             // 1: gestest.v1.topic.FooSummaryMessage
	(*FooMessage)(nil),                    // 2: gestest.v1.topic.FooMessage
	(*psm_j5pb.EventPublishMetadata)(nil), // 3: j5.state.v1.EventPublishMetadata
	(*gestest_pb.FooKeys)(nil),            // 4: gestest.v1.FooKeys
	(*gestest_pb.FooEventType)(nil),       // 5: gestest.v1.FooEventType
	(*gestest_pb.FooData)(nil),            // 6: gestest.v1.FooData
	(gestest_pb.FooStatus)(0),             // 7: gestest.v1.FooStatus
	(*messaging_j5pb.UpsertMetadata)(nil), // 8: j5.messaging.v1.UpsertMetadata
	(*emptypb.Empty)(nil),                 // 9: google.protobuf.Empty
}
var file_gestest_v1_topic_foo_p_j5s_proto_depIdxs = []int32{
	3, // 0: gestest.v1.topic.FooEventMessage.metadata:type_name -> j5.state.v1.EventPublishMetadata
	4, // 1: gestest.v1.topic.FooEventMessage.keys:type_name -> gestest.v1.FooKeys
	5, // 2: gestest.v1.topic.FooEventMessage.event:type_name -> gestest.v1.FooEventType
	6, // 3: gestest.v1.topic.FooEventMessage.data:type_name -> gestest.v1.FooData
	7, // 4: gestest.v1.topic.FooEventMessage.status:type_name -> gestest.v1.FooStatus
	8, // 5: gestest.v1.topic.FooSummaryMessage.upsert:type_name -> j5.messaging.v1.UpsertMetadata
	0, // 6: gestest.v1.topic.FooPublishTopic.FooEvent:input_type -> gestest.v1.topic.FooEventMessage
	1, // 7: gestest.v1.topic.FooSummaryTopic.FooSummary:input_type -> gestest.v1.topic.FooSummaryMessage
	2, // 8: gestest.v1.topic.GenericTopic.Foo:input_type -> gestest.v1.topic.FooMessage
	9, // 9: gestest.v1.topic.FooPublishTopic.FooEvent:output_type -> google.protobuf.Empty
	9, // 10: gestest.v1.topic.FooSummaryTopic.FooSummary:output_type -> google.protobuf.Empty
	9, // 11: gestest.v1.topic.GenericTopic.Foo:output_type -> google.protobuf.Empty
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_gestest_v1_topic_foo_p_j5s_proto_init() }
func file_gestest_v1_topic_foo_p_j5s_proto_init() {
	if File_gestest_v1_topic_foo_p_j5s_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FooEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FooSummaryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gestest_v1_topic_foo_p_j5s_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FooMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gestest_v1_topic_foo_p_j5s_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_gestest_v1_topic_foo_p_j5s_proto_goTypes,
		DependencyIndexes: file_gestest_v1_topic_foo_p_j5s_proto_depIdxs,
		MessageInfos:      file_gestest_v1_topic_foo_p_j5s_proto_msgTypes,
	}.Build()
	File_gestest_v1_topic_foo_p_j5s_proto = out.File
	file_gestest_v1_topic_foo_p_j5s_proto_rawDesc = nil
	file_gestest_v1_topic_foo_p_j5s_proto_goTypes = nil
	file_gestest_v1_topic_foo_p_j5s_proto_depIdxs = nil
}
